#!/bin/sh
# Copyright 2016 The dev Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.


#
# A function called main is required for scripts long enough to contain at
# least one other function.The last non-comment line in the file should be
# a call to main: dev_main "$@"
#
dev_main() {
    # Porject name and working directory
    if [ "${1:0:1}" != "-" ]; then
		dev_prj $@ && shift
    fi

    declare opt func args argv shft

    # Prepare optional arguments
    while true ; do
        opt=""; argv=""; shft="true"
        if [[ "$1" == "--" || "$1" == "-" ]]; then
            shift; break
        elif [[ "${1:0:2}" == "--" ]]; then
            opt="${1:2}"; shift
        elif [[ "${1:0:1}" == "-" ]]; then
            [ -z "${opa_als[${1:1}]}" ] && opt="${1:1}" || opt="${opa_als[${1:1}]}"; shift
            [ -z "$opt" ] && echo "Unrecognized option -${1:1}" >&2
        else
            break
        fi

        [ -z $opt ] && continue

        if [[ "$(expr index $opt '=')" -ge 1 ]]; then
            IFS='=' read -ra args <<< "$opt"
            opt="${args[0]}"; argv="${args[1]}";
        elif [[ ! -z "$1" && "${1:0:1}" != "-" ]]; then
            argv="$1"; shft="shift"
        fi

        func="opa_fun_${opt/-/_}"
        if [[ "$(declare -F $func)" == "$func" ]]; then
            $func $argv || $shft
        fi
    done

    # Do command function
    [ $glb_run -lt 1 ] && return 0

	[[ "$glb_run" -ge 1 && "${#glb_run_nodes[@]}" -gt 0 ]] && glb_run="3"

	dev_prj $@ && shift
	dev_file $@ && shift || return 1
	dev_func $@ && shift || return 1

    [ -z "$glb_dest" ] && glb_dest=$glb_wkdir

    if [[ $glb_run -le 2 ]]; then
        # Run in local machine
		dev_exec_local $glb_func $@
    else
        dev_exec_remote $glb_base/bin/dev $glb_prj $glb_file $glb_func $@
    fi
}

